diff --git a/.gitignore b/.gitignore
index 3b7c3baa3..775f7207a 100644
--- a/.gitignore
+++ b/.gitignore
@@ -236,3 +236,4 @@ vendor.tar.gz
 .history
 .vscode/launch.json
 .cargo/config
+.vscode/settings.json
diff --git a/Makefile.am b/Makefile.am
index e89fdb50e..fcc3e9bed 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -156,8 +156,10 @@ PATH_DEFINES = -DLOCALSTATEDIR="\"$(localstatedir)\"" -DSYSCONFDIR="\"$(sysconfd
 
 # These flags are the "must have" for all components
 AM_CPPFLAGS = $(DEBUG_DEFINES) $(PROFILING_DEFINES) $(SYSTEMTAP_DEFINES) $(RUST_DEFINES)
-AM_CFLAGS = $(DEBUG_CFLAGS) $(GCCSEC_CFLAGS) $(ASAN_CFLAGS) $(MSAN_CFLAGS) $(TSAN_CFLAGS) $(UBSAN_CFLAGS)
-AM_CXXFLAGS = $(DEBUG_CXXFLAGS) $(GCCSEC_CFLAGS) $(ASAN_CFLAGS) $(MSAN_CFLAGS) $(TSAN_CFLAGS) $(UBSAN_CFLAGS)
+AM_CFLAGS = $(DEBUG_CFLAGS) $(GCCSEC_CFLAGS) $(ASAN_CFLAGS) $(MSAN_CFLAGS) $(TSAN_CFLAGS) $(UBSAN_CFLAGS) -fsanitize=fuzzer-no-link -fno-omit-frame-pointer -fno-common
+#-fsanitize-address-use-after-scope
+AM_CXXFLAGS = $(DEBUG_CXXFLAGS) $(GCCSEC_CFLAGS) $(ASAN_CFLAGS) $(MSAN_CFLAGS) $(TSAN_CFLAGS) $(UBSAN_CFLAGS) -fsanitize=fuzzer-no-link -fno-omit-frame-pointer -fno-common
+# -fsanitize-address-use-after-scope
 # Flags for Directory Server
 # WARNING: This needs a clean up, because slap.h is a horrible mess and is publically exposed!
 DSPLUGIN_CPPFLAGS = $(DS_DEFINES) $(DS_INCLUDES) $(PATH_DEFINES) $(SYSTEMD_DEFINES) @openldap_inc@ $(NSS_CFLAGS) $(NSPR_INCLUDES) $(SYSTEMD_CFLAGS)
@@ -208,7 +210,7 @@ if HPUX
 AM_LDFLAGS = -lpthread
 else
 #AM_LDFLAGS = -Wl,-z,defs
-AM_LDFLAGS = $(ZLIB_LINK) $(JSON_C_LINK) $(PW_CRACK_LINK) $(RUST_LDFLAGS) $(ASAN_CFLAGS) $(MSAN_CFLAGS) $(TSAN_CFLAGS) $(UBSAN_CFLAGS) $(PROFILING_LINKS) $(CLANG_LDFLAGS) $(EXPORT_LDFLAGS)
+AM_LDFLAGS = $(ZLIB_LINK) $(JSON_C_LINK) $(PW_CRACK_LINK) $(RUST_LDFLAGS) $(ASAN_CFLAGS) $(MSAN_CFLAGS) $(TSAN_CFLAGS) $(UBSAN_CFLAGS) $(PROFILING_LINKS) $(CLANG_LDFLAGS) $(EXPORT_LDFLAGS) -fsanitize=fuzzer-no-link,address
 endif #end hpux
 
 # https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html#Updating-version-info
@@ -1849,6 +1851,7 @@ ns_slapd_SOURCES = ldap/servers/slapd/abandon.c \
 	ldap/servers/slapd/house.c \
 	ldap/servers/slapd/init.c \
 	ldap/servers/slapd/main.c \
+	ldap/servers/slapd/fuzzer.c \
 	ldap/servers/slapd/monitor.c \
 	ldap/servers/slapd/passwd_extop.c \
 	ldap/servers/slapd/psearch.c \
@@ -1865,7 +1868,7 @@ ns_slapd_SOURCES = ldap/servers/slapd/abandon.c \
 	ldap/servers/slapd/unbind.c \
 	ldap/servers/slapd/subentries.c
 
-ns_slapd_CPPFLAGS = $(AM_CPPFLAGS) $(DSPLUGIN_CPPFLAGS) $(SASL_CFLAGS) $(SVRCORE_INCLUDES) $(CFI_CFLAGS)
+ns_slapd_CPPFLAGS = $(AM_CPPFLAGS) $(DSPLUGIN_CPPFLAGS) $(SASL_CFLAGS) $(SVRCORE_INCLUDES) $(CFI_CFLAGS) -fsanitize=fuzzer-no-link -fprofile-instr-generate -fcoverage-mapping
 # We need our libraries to come first, then our externals libraries second.
 ns_slapd_LDADD = libslapd.la libldaputil.la libsvrcore.la $(RNSSLAPD_LIB)
 
@@ -1873,7 +1876,7 @@ ns_slapd_LDADD += $(LDAPSDK_LINK) $(NSS_LINK) $(LIBADD_DL) -lssl -lcrypto \
        $(NSPR_LINK) $(SASL_LINK) $(LIBNSL) $(LIBSOCKET) $(THREADLIB) $(SYSTEMD_LIBS) $(EVENT_LINK)
 
 ns_slapd_DEPENDENCIES = libslapd.la libldaputil.la
-ns_slapd_LINK = $(LINK)
+ns_slapd_LINK = $(CXXLINK) -fsanitize=fuzzer-no-link -fprofile-instr-generate  -pthread /usr/lib64/clang/13.0.0/lib/linux/libclang_rt.fuzzer_no_main-x86_64.a
 
 
 #------------------------
diff --git a/configure.ac b/configure.ac
index 759c45a89..a4098e887 100644
--- a/configure.ac
+++ b/configure.ac
@@ -127,8 +127,8 @@ AC_ARG_ENABLE(debug, AS_HELP_STRING([--enable-debug], [Enable debug features (de
 AC_MSG_RESULT($enable_debug)
 if test "$enable_debug" = yes ; then
   debug_defs="-DDEBUG -DMCC_DEBUG"
-  debug_cflags="-g3 -ggdb -gdwarf-5  -O0"
-  debug_cxxflags="-g3 -ggdb -gdwarf-5  -O0"
+  debug_cflags="-g3 -ggdb -gdwarf-5  -O2 -fsanitize=fuzzer-no-link "
+  debug_cxxflags="-g3 -ggdb -gdwarf-5  -O2 -fsanitize=fuzzer-no-link "
   debug_rust_defs="-C debuginfo=2 -Z macro-backtrace"
   cargo_defs=""
   rust_target_dir="debug"
@@ -255,7 +255,7 @@ AC_ARG_ENABLE(profiling, AS_HELP_STRING([--enable-profiling], [Enable gcov profi
               [], [ enable_profiling=no ])
 AC_MSG_RESULT($enable_profiling)
 if test "$enable_profiling" = yes ; then
-  profiling_defs="-fprofile-arcs -ftest-coverage -g3 -ggdb -gdwarf-5  -O0"
+  profiling_defs="-fprofile-arcs -ftest-coverage -g3 -ggdb -gdwarf-5  -O2"
   profiling_links="-lgcov --coverage"
 else
   profiling_defs=""
diff --git a/ldap/servers/slapd/dn.c b/ldap/servers/slapd/dn.c
index 2f32fdf96..3afcb589c 100644
--- a/ldap/servers/slapd/dn.c
+++ b/ldap/servers/slapd/dn.c
@@ -1550,6 +1550,7 @@ slapi_dn_beparent(
  *   etc.
  * }
  */
+
 const char *
 slapi_dn_find_parent_ext(const char *dn, int is_tombstone)
 {
diff --git a/ldap/servers/slapd/main.c b/ldap/servers/slapd/main.c
index eb4c88151..d1b16b125 100644
--- a/ldap/servers/slapd/main.c
+++ b/ldap/servers/slapd/main.c
@@ -15,6 +15,7 @@
 /* Make it stdlib.h, and revert to malloc.h with ifdefs if we have issues here. WB 2016 */
 #include <stdlib.h>
 #include <ldap.h>
+#include <fuzzer.h>
 #undef OFF
 #undef LITTLE_ENDIAN
 
@@ -66,6 +67,7 @@ union semun
 /* For mallopt. Should be removed soon. */
 #include <malloc.h>
 #endif
+int fuzzer_started = 0;
 
 /* Forward Declarations */
 
@@ -386,7 +388,7 @@ usage(char *name, char *extraname, int slapd_exemode)
 
     default: /* SLAPD_EXEMODE_SLAPD */
         usagestr = "usage: %s %s%s-D configdir [-d debuglevel] "
-                   "[-i pidlogfile] [-v] [-V]\n";
+                   "[-i pidlogfile] [-v] [-V] [-F]\n";
     }
 
     fprintf(stderr, usagestr, name, extraname, extraspace);
@@ -1349,11 +1351,12 @@ process_command_line(int argc, char **argv, struct main_config *mcfg)
         {"instanceDir", ArgRequired, 'D'},
         {0, 0, 0}};
 
-    char *opts_slapd = "vVd:i:SD:w:";
+    char *opts_slapd = "vVd:F:i:SD:w:";
     struct opt_ext long_options_slapd[] = {
         {"version", ArgNone, 'v'},
         {"versionFull", ArgNone, 'V'},
         {"debug", ArgRequired, 'd'},
+        {"fuzz", ArgNone, 'F'},
         {"pidfile", ArgRequired, 'i'},
         {"allowMultipleProcesses", ArgNone, 'S'},
         {"configDir", ArgRequired, 'D'},
@@ -1466,6 +1469,18 @@ process_command_line(int argc, char **argv, struct main_config *mcfg)
             break;
 #endif
 
+        case 'F': /* turn on fuzzing */
+            if (fuzzer_started == 0){
+                fprintf(stderr,
+                        "fuzzing enabled\n");
+                launchFuzzer();
+                fuzzer_started = 1;
+            } else {
+                fprintf(stderr,
+                        "fuzzing already started\n");
+            }
+            break;
+
         case 'D': /* config dir */
             configdir = rel2abspath(optarg_ext);
 
